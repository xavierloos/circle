{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js\";\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Input, Icon, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\nimport { color } from 'react-native-reanimated';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (authUser) {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\"\n    });\n  }, [navigation]);\n\n  var singIn = function singIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      return alert(error);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.scroll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    h2: true,\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Email\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"at\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 125\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onSubmitEditing: singIn,\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 152\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    raised: true,\n    disabled: !password && !email,\n    title: \"Login\",\n    containerStyle: styles.button,\n    onPress: singIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    raised: true,\n    title: \"Register\",\n    type: \"outline\",\n    containerStyle: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop: 50\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js"],"names":["React","useState","useEffect","useLayoutEffect","Button","Input","Icon","Text","StatusBar","auth","color","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","authUser","replace","setOptions","headerTitle","headerStyle","backgroundColor","headerTitleStyle","headerTintColor","singIn","signInWithEmailAndPassword","catch","error","alert","styles","scroll","container","title","inputContainer","text","button","navigate","StyleSheet","create","paddingTop","flex","justifyContent","alignItems","padding","marginBottom","fontWeight","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { StyleSheet, View, KeyboardAvoidingView, ScrollView } from 'react-native';\nimport { Button, Input, Icon, Text } from \"react-native-elements\"\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\"\nimport { color } from 'react-native-reanimated';\n\nconst LoginScreen = ({ navigation }) => {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) { navigation.replace(\"Home\") }\n    })\n    return unsubscribe\n  }, [])\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n    })\n  }, [navigation])\n\n  const singIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error))\n  }\n\n  return (\n    <ScrollView style={styles.scroll}>\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Text h2 style={styles.title}>Login</Text>\n        <View style={styles.inputContainer}>\n          <Input type=\"email\" placeholder=\"Email\" autoFocus value={email} onChangeText={(text) => setEmail(text)} leftIcon={<Icon name=\"at\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n          <Input type=\"password\" placeholder=\"Password\" value={password} onChangeText={(text) => setPassword(text)} onSubmitEditing={singIn} leftIcon={<Icon name=\"lock\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n        </View>\n        <Button raised disabled={!password && !email} title=\"Login\" containerStyle={styles.button} onPress={singIn} />\n        <Button raised title=\"Register\" type=\"outline\" containerStyle={styles.button} onPress={() => navigation.navigate(\"Register\")} />\n      </KeyboardAvoidingView>\n    </ScrollView>\n  )\n}\nexport default LoginScreen\nconst styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop: 50\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n    color: \"red\"\n  }\n})\n"]},"metadata":{},"sourceType":"module"}