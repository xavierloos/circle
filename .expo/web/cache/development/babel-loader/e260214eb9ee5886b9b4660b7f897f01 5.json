{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/AddChatScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { db } from \"../firebase\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatname = _useState2[0],\n      setChatname = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Add a new chat\",\n      headerBackTitle: \"Cancel\"\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"chats\").add({\n              chatName: chatname\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (e) {\n              return alert(e);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Chat name\",\n    value: chatname,\n    onChangeText: function onChangeText(text) {\n      return setChatname(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      type: \"antdesign\",\n      size: 30,\n      color: \"black\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }),\n    onSubmitEditing: createChat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    style: styles.button,\n    onPress: createChat,\n    title: \"Create chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Icon","Button","db","AddChatScreen","navigation","chatname","setChatname","setOptions","title","headerBackTitle","createChat","collection","add","chatName","then","goBack","catch","e","alert","styles","container","inputContainer","text","button","StyleSheet","create","flex","padding","backgroundColor","alignItems","justifyContent","width","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,uBAApC;AACA,SAASC,EAAT;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACxC,kBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACAT,EAAAA,eAAe,CAAC,YAAM;AACpBO,IAAAA,UAAU,CAACG,UAAX,CAAsB;AACpBC,MAAAA,KAAK,EAAE,gBADa;AAEpBC,MAAAA,eAAe,EAAE;AAFG,KAAtB;AAID,GALc,EAKZ,CAACL,UAAD,CALY,CAAf;;AAOA,MAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAAEC,cAAAA,QAAQ,EAAER;AAAZ,aAA3B,EACHS,IADG,CACE,YAAM;AACVV,cAAAA,UAAU,CAACW,MAAX;AACD,aAHG,EAIHC,KAJG,CAIG,UAACC,CAAD;AAAA,qBAAOC,KAAK,CAACD,CAAD,CAAZ;AAAA,aAJH,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAEhB,QAAtC;AAAgD,IAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,aAAUhB,WAAW,CAACgB,IAAD,CAArB;AAAA,KAA9D;AAA2F,IAAA,QAAQ,EACjG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAE,EAA3C;AAA+C,MAAA,KAAK,EAAC,OAArD;AAA6D,MAAA,QAAQ,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAEE,IAAA,eAAe,EAAEZ,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAES,MAAM,CAACI,MAAtB;AAA8B,IAAA,OAAO,EAAEb,UAAvC;AAAmD,IAAA,KAAK,EAAC,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA3BD;;AA6BA,eAAeP,aAAf;AAEA,IAAMgB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,eAAe,EAAE,OAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BT,EAAAA,cAAc,EAAE;AACdU,IAAAA,KAAK,EAAE;AADO,GARe;AAW/BR,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,SAAS,EAAE;AAFL;AAXuB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { db } from '../firebase';\nconst AddChatScreen = ({ navigation }) => {\n  const [chatname, setChatname] = useState(\"\")\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Add a new chat\",\n      headerBackTitle: \"Cancel\",\n    });\n  }, [navigation])\n\n  const createChat = async () => {\n    await db.collection(\"chats\").add({ chatName: chatname, })\n      .then(() => {\n        navigation.goBack()\n      })\n      .catch((e) => alert(e))\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <Input placeholder=\"Chat name\" value={chatname} onChangeText={(text) => setChatname(text)} leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={30} color=\"black\" required />\n        } onSubmitEditing={createChat} />\n      </View>\n      <Button style={styles.button} onPress={createChat} title=\"Create chat\" />\n    </View>\n  )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}