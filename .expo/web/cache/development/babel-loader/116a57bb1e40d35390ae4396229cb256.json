{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/RegisterScreen.js\";\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Input, Text, Icon } from \"react-native-elements\";\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { color } from 'react-native-reanimated';\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      surname = _useState4[0],\n      setSurname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imageUrl = _useState10[0],\n      setImageUrl = _useState10[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\",\n      headerBackTitle: \"Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: firstName,\n        displayName: firstName,\n        photoURL: imageUrl || \"http://icons.iconarchive.com/icons/pelfusion/long-shadow-media/512/Contact-icon.png\"\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.scroll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    h2: true,\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Register\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    style: styles.input,\n    type: \"text\",\n    placeholder: \"First name\",\n    autoFocus: true,\n    value: firstName,\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"user\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      style: {\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 158\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Surname\",\n    autoFocus: true,\n    value: surname,\n    onChangeText: function onChangeText(text) {\n      return setSurname(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"id-card\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      style: {\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 130\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"at\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      style: {\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 115\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      style: {\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 143\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Profile picture URL\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: register,\n    leftIcon: React.createElement(Icon, {\n      name: \"photo\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      style: {\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 161\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    raised: true,\n    disabled: !password,\n    containerStyle: styles.button,\n    raised: true,\n    onPress: register,\n    title: \"Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop: 50\n  },\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  input: {},\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/RegisterScreen.js"],"names":["React","useState","useLayoutEffect","Button","Input","Text","Icon","StatusBar","auth","color","RegisterScreen","navigation","firstName","setFirstName","surname","setSurname","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headerTitle","headerStyle","backgroundColor","headerTitleStyle","headerTintColor","headerBackTitle","register","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","photoURL","catch","error","alert","message","styles","scroll","container","title","inputContainer","input","text","marginRight","button","height","StyleSheet","create","paddingTop","flex","padding","alignItems","justifyContent","marginBottom","fontWeight","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react'\nimport { View, KeyboardAvoidingView, StyleSheet, ScrollView } from 'react-native'\nimport { Button, Input, Text, Icon } from \"react-native-elements\"\nimport { StatusBar } from 'expo-status-bar'\nimport { auth } from \"../firebase\"\nimport { color } from 'react-native-reanimated'\nconst RegisterScreen = ({ navigation }) => {\n  const [firstName, setFirstName] = useState(\"\")\n  const [surname, setSurname] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [imageUrl, setImageUrl] = useState(\"\")\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n      headerBackTitle: \"Login\",\n    });\n  }, [navigation])\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: firstName,\n          displayName: firstName,\n          photoURL: imageUrl || \"http://icons.iconarchive.com/icons/pelfusion/long-shadow-media/512/Contact-icon.png\",\n        })\n      })\n      .catch((error) => alert(error.message))\n  }\n  return (\n    <ScrollView style={styles.scroll}>\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Text h2 style={styles.title}>Register</Text>\n        <View style={styles.inputContainer}>\n          <Input style={styles.input} type=\"text\" placeholder=\"First name\" autoFocus value={firstName} onChangeText={(text) => setFirstName(text)} leftIcon={<Icon name=\"user\" type=\"font-awesome\" size={30} color=\"#D50000\" style={{ marginRight: 10 }} />} />\n          <Input type=\"text\" placeholder=\"Surname\" autoFocus value={surname} onChangeText={(text) => setSurname(text)} leftIcon={<Icon name=\"id-card\" type=\"font-awesome\" size={30} color=\"#D50000\" style={{ marginRight: 10 }} />} />\n          <Input type=\"email\" placeholder=\"Email\" value={email} onChangeText={(text) => setEmail(text)} leftIcon={<Icon name=\"at\" type=\"font-awesome\" size={30} color=\"#D50000\" style={{ marginRight: 10 }} />} />\n          {/* secureTextEntry */}\n          <Input secureTextEntry type=\"password\" placeholder=\"Password\" value={password} onChangeText={(text) => setPassword(text)} leftIcon={<Icon name=\"lock\" type=\"font-awesome\" size={30} color=\"#D50000\" style={{ marginRight: 10 }} />} />\n          <Input type=\"text\" placeholder=\"Profile picture URL\" value={imageUrl} onChangeText={(text) => setImageUrl(text)} onSubmitEditing={register} leftIcon={<Icon name=\"photo\" type=\"font-awesome\" size={30} color=\"#D50000\" style={{ marginRight: 10 }} />} />\n        </View>\n        <Button raised disabled={!password} containerStyle={styles.button} raised onPress={register} title=\"Register\" />\n        <View style={{ height: 100 }} />\n      </KeyboardAvoidingView>\n    </ScrollView>\n\n  )\n}\nexport default RegisterScreen;\nconst styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop:50\n  },\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  input: {\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  }\n})"]},"metadata":{},"sourceType":"module"}