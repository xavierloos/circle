{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/ChatInfoScreen.js\";\n\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\n\nvar ChatInfoScreen = function ChatInfoScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      id = _ref.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatInfo = _useState2[0],\n      setChatInfo = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"CIRCLE: Info\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\"\n    });\n  }, []);\n  useEffect(function () {\n    var unsubscribe = db.collection(\"chats\").doc(route.params.id).onSnapshot(function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, [route]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, console.log(\"THIS\"), console.log(route), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"user\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, id)));\n};\n\nexport default ChatInfoScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/ChatInfoScreen.js"],"names":["React","useLayoutEffect","useState","useEffect","Icon","auth","db","ChatInfoScreen","navigation","route","id","chatInfo","setChatInfo","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","unsubscribe","collection","doc","params","onSnapshot","snapshot","setMessages","docs","map","data","console","log","styles","icon","text","StyleSheet","create"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA4D,OAA5D;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,EAAeC,EAAf;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA+B;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACpD,kBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACAX,EAAAA,eAAe,CAAC,YAAM;AACpBO,IAAAA,UAAU,CAACK,UAAX,CAAsB;AACpBC,MAAAA,KAAK,EAAE,cADa;AAEpBC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAFO;AAGpBC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHE;AAIpBC,MAAAA,eAAe,EAAE;AAJG,KAAtB;AAMD,GAPc,EAOZ,EAPY,CAAf;AASAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,WAAW,GAAGd,EAAE,CAACe,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Bb,KAAK,CAACc,MAAN,CAAab,EAAxC,EAA4Cc,UAA5C,CAAuD,UAAAC,QAAQ;AAAA,aACjFC,WAAW,CACTD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAN,GAAG;AAAA,eAAK;AACxBZ,UAAAA,EAAE,EAAEY,GAAG,CAACZ,EADgB;AAExBmB,UAAAA,IAAI,EAAEP,GAAG,CAACO,IAAJ;AAFkB,SAAL;AAAA,OAArB,CADS,CADsE;AAAA,KAA/D,CAApB;AAMA,WAAOT,WAAP;AACD,GARQ,EAQN,CAACX,KAAD,CARM,CAAT;AAUA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqB,OAAO,CAACC,GAAR,CAAY,MAAZ,CADH,EAGGD,OAAO,CAACC,GAAR,CAAYtB,KAAZ,CAHH,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuB,MAAM,CAACC,IAApB;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIsB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BxB,EAA3B,CAJtB,CAJF,CADF;AAaD,CAlCD;;AAmCA,eAAeH,cAAf;AACA,IAAMyB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState, useEffect } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Icon } from 'react-native-elements'\nimport { auth, db } from '../firebase'\n\nconst ChatInfoScreen = ({ navigation, route, id }) => {\n  const [chatInfo, setChatInfo] = useState([]);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"CIRCLE: Info\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n    })\n  }, [])\n  \n  useEffect(() => {\n    const unsubscribe = db.collection(\"chats\").doc(route.params.id).onSnapshot(snapshot =>\n      setMessages(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n        }))))\n    return unsubscribe\n  }, [route])\n\n  return (\n    <View>\n      {console.log(\"THIS\")}\n      {/* {console.log(chatName)} */}\n      {console.log(route)}\n      <View>\n        <Icon style={styles.icon}\n          name='user'\n          type='font-awesome'\n          color='#D50000' /><Text style={styles.text}>{id}</Text>\n      </View>\n    </View>\n  )\n}\nexport default ChatInfoScreen\nconst styles = StyleSheet.create({})\n"]},"metadata":{},"sourceType":"module"}