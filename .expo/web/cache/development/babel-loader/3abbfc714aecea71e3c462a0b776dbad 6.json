{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/AddChatScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { ImagePicker } from \"expo\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatname = _useState2[0],\n      setChatname = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\",\n      title: \"Add a new chat\",\n      headerBackTitle: \"Cancel\"\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"chats\").add({\n              chatName: chatname\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (e) {\n              return alert(e);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var chooseImage = function chooseImage() {\n    var result;\n    return _regeneratorRuntime.async(function chooseImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              _this.uploadImage(result.uri, \"test-img\").then(function () {\n                Alert.alert(\"Image uploaded\");\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  uploadImage = function uploadImage(uri, imageName) {\n    var response, blob, ref;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = db.storage().ref().child(\"images/\" + imageName);\n            return _context3.abrupt(\"return\", ref.put(blob));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Chat name\",\n    value: chatname,\n    onChangeText: function onChangeText(text) {\n      return setChatname(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      type: \"antdesign\",\n      size: 30,\n      color: \"black\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }),\n    onSubmitEditing: createChat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    onPress: chooseImage,\n    title: \"Choose image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    disabled: !chatname,\n    style: styles.button,\n    onPress: createChat,\n    title: \"Create chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Icon","Button","db","ImagePicker","AddChatScreen","navigation","chatname","setChatname","setOptions","headerTitle","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","title","headerBackTitle","createChat","collection","add","chatName","then","goBack","catch","e","alert","chooseImage","launchCameraAsync","result","cancelled","uploadImage","uri","Alert","imageName","fetch","response","blob","ref","storage","child","put","styles","container","inputContainer","text","button","StyleSheet","create","flex","padding","alignItems","justifyContent","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, View, Alert } from 'react-native'\nimport { Input, Icon, Button } from 'react-native-elements';\nimport { db } from '../firebase';\nimport { ImagePicker } from \"expo\"\n\nconst AddChatScreen = ({ navigation }) => {\n  const [chatname, setChatname] = useState(\"\")\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n      title: \"Add a new chat\",\n      headerBackTitle: \"Cancel\",\n    });\n  }, [navigation])\n\n  const createChat = async () => {\n    await db.collection(\"chats\").add({ chatName: chatname, })\n      .then(() => {\n        navigation.goBack()\n      })\n      .catch((e) => alert(e))\n  }\n\n  const chooseImage = async () => {\n    let result = await ImagePicker.launchCameraAsync();\n    if (!result.cancelled) {\n      this.uploadImage(result.uri, \"test-img\")\n        .then(() => {\n          Alert.alert(\"Image uploaded\")\n        })\n    }\n  }\n\n  uploadImage = async (uri, imageName) => {\n    const response = await fetch(uri)\n    const blob = await response.blob()\n    var ref = db.storage().ref().child(\"images/\" + imageName)\n    return ref.put(blob)\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <Input placeholder=\"Chat name\" value={chatname} onChangeText={(text) => setChatname(text)} leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={30} color=\"black\" required />\n        } onSubmitEditing={createChat} />\n        <Button style={styles.button} onPress={chooseImage} title=\"Choose image\" />\n      </View>\n      <Button disabled={!chatname} style={styles.button} onPress={createChat} title=\"Create chat\" />\n    </View>\n  )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}