{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/ProfileScreen.js\";\n\nimport React, { useLayoutEffect, useState, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, Icon, Button, Text } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\nimport Animated from 'react-native-reanimated';\n\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var _auth$currentUser, _auth$currentUser2, _auth$currentUser3;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var scaleValue = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    toggleModal();\n  }, [visible]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"CIRCLE: Profile\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\"\n    });\n  }, []);\n\n  var logout = function logout() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    });\n  };\n\n  var ModalPoup = function ModalPoup(_ref2) {\n    var visible = _ref2.visible,\n        children = _ref2.children;\n\n    var _useState3 = useState(visible),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showModal = _useState4[0],\n        setShowModal = _useState4[1];\n\n    return React.createElement(Modal, {\n      transparent: true,\n      visible: showModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: styles.modalBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.modalContainer, {\n        transform: []\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, children)));\n  };\n\n  var toggleModal = function toggleModal() {\n    if (visible) {\n      setShowModal(true);\n      Animated.spring(scaleValue, {\n        toValue: 1,\n        duration: 300,\n        useNaiveDriver: true\n      });\n    } else {\n      setShowModal(false);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, console.log(auth == null ? void 0 : auth.currentUser), React.createElement(Avatar, {\n    size: 100,\n    rounded: true,\n    source: {\n      uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"user\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.displaySurname)), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"envelope\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.email)), React.createElement(Button, {\n    raised: true,\n    title: \"Edit user\",\n    containerStyle: styles.button,\n    onPress: function onPress() {\n      return setVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalPoup, {\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Edit user\"), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return setVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"times\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), React.createElement(Button, {\n    raised: true,\n    title: \"Logout\",\n    type: \"outline\",\n    containerStyle: styles.button,\n    onPress: logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  infoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'baseline',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 18,\n    marginTop: 20\n  },\n  button: {\n    width: 100,\n    marginTop: 20\n  },\n  modalBg: {\n    flex: 1,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalContainer: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    borderRadius: 20,\n    elevation: 20\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: '100%',\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/ProfileScreen.js"],"names":["React","useLayoutEffect","useState","useRef","useEffect","Avatar","Icon","Button","Text","auth","db","Animated","ProfileScreen","navigation","visible","setVisible","scaleValue","Value","current","toggleModal","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","logout","signOut","then","replace","ModalPoup","children","showModal","setShowModal","styles","modalBg","modalContainer","transform","spring","toValue","duration","useNaiveDriver","container","console","log","currentUser","uri","photoURL","infoContainer","icon","text","displaySurname","email","button","alignItems","header","content","StyleSheet","create","flex","justifyContent","padding","display","flexDirection","marginRight","fontWeight","fontSize","marginTop","width","paddingHorizontal","paddingVertical","borderRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState, useRef, useEffect } from 'react'\nimport { StyleSheet, View, Modal, TouchableOpacity } from 'react-native'\nimport { Avatar, Icon, Button, Text } from 'react-native-elements'\nimport { auth, db } from '../firebase'\nimport Animated from 'react-native-reanimated'\n// import { SimpleLineIcons } from \"@expo/vector-icons\"\n\nconst ProfileScreen = ({ navigation }) => {\n  const [visible, setVisible] = useState(false)\n  const scaleValue = useRef(new Animated.Value(0)).current\n\n  useEffect(() => {\n    toggleModal()\n  }, [visible])\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"CIRCLE: Profile\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n    })\n  }, [])\n\n  const logout = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"Login\")\n    })\n  }\n  const ModalPoup = ({ visible, children }) => {\n    const [showModal, setShowModal] = useState(visible)\n    return <Modal transparent visible={showModal}>\n      <View style={styles.modalBg}>\n        <Animated.View style={[styles.modalContainer,{transform:[]}]}>\n          {children}\n        </Animated.View>\n      </View>\n    </Modal>\n  }\n\n  const toggleModal = () => {\n    if (visible) {\n      setShowModal(true)\n      Animated.spring(scaleValue, {\n        toValue: 1,\n        duration: 300,\n        useNaiveDriver:true,\n      })\n    } else {\n      setShowModal(false)\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      {console.log(auth?.currentUser)}\n      <Avatar size={100} rounded source={{ uri: auth?.currentUser?.photoURL }} />\n      <View style={styles.infoContainer}>\n        <Icon style={styles.icon}\n          name='user'\n          type='font-awesome'\n          color='#D50000' /><Text style={styles.text}>{auth?.currentUser?.displaySurname}</Text>\n      </View>\n      <View style={styles.infoContainer}>\n        <Icon style={styles.icon}\n          name='envelope'\n          type='font-awesome'\n          color='#D50000' /><Text style={styles.text}>{auth?.currentUser?.email}</Text>\n      </View>\n      <Button raised title=\"Edit user\" containerStyle={styles.button} onPress={() => setVisible(true)} />\n      <ModalPoup visible={visible}>\n        <View style={{ alignItems: \"center\" }}>\n          <View style={styles.header}>\n            <Text h4>Edit user</Text>\n            <TouchableOpacity activeOpacity={0.5} onPress={() => setVisible(false)} >\n              <Icon style={styles.icon}\n                name='times'\n                type='font-awesome'\n                color='#D50000' />\n            </TouchableOpacity>\n          </View>\n          <View style={styles.content}>\n          </View>\n        </View>\n      </ModalPoup>\n      <Button raised title=\"Logout\" type=\"outline\" containerStyle={styles.button} onPress={logout} />\n    </View>\n  )\n}\n\nexport default ProfileScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  infoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'baseline',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 18,\n    marginTop: 20\n  },\n  button: {\n    width: 100,\n    marginTop: 20,\n  },\n  modalBg: {\n    flex: 1,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalContainer: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 20,\n    paddingVertical: 20,\n    borderRadius: 20,\n    elevation: 20\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: '100%',\n    justifyContent: \"space-between\"\n  }\n})\n"]},"metadata":{},"sourceType":"module"}