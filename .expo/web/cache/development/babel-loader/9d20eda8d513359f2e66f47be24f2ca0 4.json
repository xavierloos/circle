{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Input, Icon, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\nimport * as WebBrowser from 'expo-web-browser';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"logIn\",\n    value: function logIn() {\n      var _await$WebBrowser$ope, type, token, response;\n\n      return _regeneratorRuntime.async(function logIn$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(WebBrowser.openBrowserAsync(\"https://graph.facebook.com/me?access_token=165654778951149\"));\n\n            case 2:\n              _await$WebBrowser$ope = _context.sent;\n              type = _await$WebBrowser$ope.type;\n              token = _await$WebBrowser$ope.token;\n\n              if (!(type === \"success\")) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token));\n\n            case 8:\n              response = _context.sent;\n              _context.t0 = Alert;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 12:\n              _context.t1 = _context.sent.name;\n              _context.t2 = \"Hi \" + _context.t1;\n              _context.t3 = _context.t2 + \"!\";\n\n              _context.t0.alert.call(_context.t0, \"Logged in!\", _context.t3);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: styles.contentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.welcomeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.helpContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.logIn();\n        },\n        style: styles.helpLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.helpLinkText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \"Login with Facebook\")))), React.createElement(View, {\n        style: styles.tabBarInfoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.tabBarInfoText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Exponent Facebook Login\")));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  contentContainer: {\n    paddingTop: 80\n  },\n  welcomeContainer: {\n    alignItems: \"center\",\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 140,\n    height: 38,\n    resizeMode: \"contain\",\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: \"center\",\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: \"rgba(96,100,109, 0.8)\"\n  },\n  codeHighlightContainer: {\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    lineHeight: 23,\n    textAlign: \"center\"\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: \"black\",\n      shadowOffset: {\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: \"center\",\n    backgroundColor: \"#fbfbfb\",\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    textAlign: \"center\"\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: \"center\"\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 24,\n    color: \"white\",\n    padding: 10,\n    backgroundColor: \"#3b5998\"\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js"],"names":["React","useState","useEffect","useLayoutEffect","Button","Input","Icon","Text","StatusBar","auth","WebBrowser","LoginScreen","openBrowserAsync","type","token","fetch","response","Alert","json","name","alert","styles","container","contentContainer","welcomeContainer","helpContainer","logIn","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","Component","StyleSheet","create","flex","backgroundColor","paddingTop","alignItems","marginTop","marginBottom","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","color","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","fontSize","lineHeight","textAlign","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","navigationFilename","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { StyleSheet, View, KeyboardAvoidingView, ScrollView, TouchableOpacity } from 'react-native';\nimport { Button, Input, Icon, Text } from \"react-native-elements\"\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\" \nimport * as WebBrowser from 'expo-web-browser';\n\nexport default class LoginScreen extends React.Component {\n  async logIn() {\n    const {\n      type,\n      token\n    } = await WebBrowser.openBrowserAsync(`https://graph.facebook.com/me?access_token=165654778951149`)\n    if (type === \"success\") {\n      const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);\n      Alert.alert(\"Logged in!\", `Hi ${(await response.json()).name}!`);\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer} >\n          <View style={styles.welcomeContainer}>\n          </View>\n          <View style={styles.helpContainer}>\n            <TouchableOpacity onPress={() => this.logIn()} style={styles.helpLink}>\n              <Text style={styles.helpLinkText}>\n                Login with Facebook\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n        <View style={styles.tabBarInfoContainer}>\n          <Text style={styles.tabBarInfoText}>\n            Exponent Facebook Login\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  contentContainer: {\n    paddingTop: 80\n  },\n  welcomeContainer: {\n    alignItems: \"center\",\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 140,\n    height: 38,\n    resizeMode: \"contain\",\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: \"center\",\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: \"rgba(96,100,109, 0.8)\"\n  },\n  codeHighlightContainer: {\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    lineHeight: 23,\n    textAlign: \"center\"\n  },\n  tabBarInfoContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: \"black\",\n        shadowOffset: { height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3\n      },\n      android: {\n        elevation: 20\n      }\n    }),\n    alignItems: \"center\",\n    backgroundColor: \"#fbfbfb\",\n    paddingVertical: 20\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    textAlign: \"center\"\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: \"center\"\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 24,\n    color: \"white\",\n    padding: 10,\n    backgroundColor: \"#3b5998\"\n  }\n});\n// const LoginScreen = ({ navigation }) => {\n//   const [email, setEmail] = useState(\"\")\n//   const [password, setPassword] = useState(\"\")\n\n//   useEffect(() => {\n//     const unsubscribe = auth.onAuthStateChanged((authUser) => {\n//       if (authUser) { navigation.replace(\"Home\") }\n//     })\n//     return unsubscribe\n//   }, [])\n\n//   useLayoutEffect(() => {\n//     navigation.setOptions({\n//       headerTitle: \"CIRCLE\",\n//       headerStyle: { backgroundColor: \"#D50000\" },\n//       headerTitleStyle: { color: \"white\" },\n//       headerTintColor: \"white\",\n//     })\n//   }, [navigation])\n\n//   const singIn = () => {\n//     auth\n//       .signInWithEmailAndPassword(email, password)\n//       .catch((error) => alert(error))\n//   }\n\n//   let loginFacebook = async () => {\n//     // const { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync('165654778951149', { permissions: ['public-profile', 'email'] })\n//     console.log(\"this:\" + token + type)\n//     const { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync(\n//       \"165654778951149\", { permissions: [\"public_profile\"] }\n//     );\n//     console.log(\"this:\" + token + type)\n//     console.log(type)\n//     if (type === 'success') {\n\n//     } else {\n//       alert(type)\n//     }\n//   }\n\n//   return (\n//     <ScrollView style={styles.scroll}>\n//       <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n//         <StatusBar style=\"light\" />\n//         <Text h2 style={styles.title}>Login</Text>\n//         <View style={styles.inputContainer}>\n//           <Input type=\"email\" placeholder=\"Email\" autoFocus value={email} onChangeText={(text) => setEmail(text)} leftIcon={<Icon name=\"at\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n//           <Input type=\"password\" placeholder=\"Password\" value={password} onChangeText={(text) => setPassword(text)} onSubmitEditing={singIn} leftIcon={<Icon name=\"lock\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n//         </View>\n//         <Button raised disabled={!password && !email} title=\"Login\" containerStyle={styles.button} onPress={singIn} />\n//         <Button raised title=\"Register\" type=\"outline\" containerStyle={styles.button} onPress={() => navigation.navigate(\"Register\")} />\n//         <Button title=\"Facebook\" type=\"outline\" containerStyle={styles.button} onPress={loginFacebook} />\n//       </KeyboardAvoidingView>\n//     </ScrollView>\n//   )\n// }\n// export default LoginScreen\n// const styles = StyleSheet.create({\n//   scroll: {\n//     backgroundColor: \"white\",\n//     paddingTop: 50\n//   },\n//   container: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     padding: 10,\n//     backgroundColor: \"white\"\n//   },\n//   title: {\n//     marginBottom: 50,\n//     fontWeight: \"700\",\n//     color: \"#D50000\"\n//   },\n//   inputContainer: {\n//     width: 300,\n//   },\n//   button: {\n//     width: 200,\n//     marginTop: 10,\n//     color: \"red\"\n//   }\n// })"]},"metadata":{},"sourceType":"module"}