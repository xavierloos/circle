{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/ProfileScreen.js\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Avatar, Icon, Button } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\n\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var _auth$currentUser, _auth$currentUser2, _auth$currentUser3;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"CIRCLE: Profile\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\"\n    });\n  }, []);\n\n  var logout = function logout() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    });\n  };\n\n  var ModalPoup = function ModalPoup(_ref2) {\n    var visible = _ref2.visible,\n        children = _ref2.children;\n\n    var _useState3 = useState(visible),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showModal = _useState4[0],\n        setShowModal = _useState4[1];\n\n    return React.createElement(Modal, {\n      transparent: true,\n      visible: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: styles.modalBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.ModalContainer],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, console.log(auth == null ? void 0 : auth.currentUser), React.createElement(Avatar, {\n    size: 100,\n    rounded: true,\n    source: {\n      uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"user\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.displaySurname)), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    style: styles.icon,\n    name: \"envelope\",\n    type: \"font-awesome\",\n    color: \"#D50000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.email)), React.createElement(Button, {\n    raised: true,\n    title: \"Edit user\",\n    containerStyle: styles.button,\n    onPress: function onPress() {\n      return setVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalPoup, {\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    raised: true,\n    title: \"Logout\",\n    type: \"outline\",\n    containerStyle: styles.button,\n    onPress: logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  infoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'baseline',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 18,\n    marginTop: 20\n  },\n  button: {\n    width: 100,\n    marginTop: 20\n  },\n  modalBg: {\n    flex: 1,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalContainer: {}\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/ProfileScreen.js"],"names":["React","useLayoutEffect","useState","Avatar","Icon","Button","auth","db","ProfileScreen","navigation","visible","setVisible","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","logout","signOut","then","replace","ModalPoup","children","showModal","setShowModal","styles","modalBg","ModalContainer","container","console","log","currentUser","uri","photoURL","infoContainer","icon","text","displaySurname","email","button","StyleSheet","create","flex","justifyContent","alignItems","padding","display","flexDirection","marginRight","fontWeight","fontSize","marginTop","width","modalContainer"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View, Modal } from 'react-native'\nimport { Avatar, Icon, Button } from 'react-native-elements'\nimport { auth, db } from '../firebase'\n// import { SimpleLineIcons } from \"@expo/vector-icons\"\n\nconst ProfileScreen = ({ navigation }) => {\n  const [visible, setVisible] = useState(false)\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"CIRCLE: Profile\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n    })\n  }, [])\n\n  const logout = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"Login\")\n    })\n  }\n  const ModalPoup = ({ visible, children }) => {\n    const [showModal, setShowModal] = useState(visible)\n    return <Modal transparent visible={true}>\n      <View style={styles.modalBg}>\n        <View style={[styles.ModalContainer]}>\n\n        </View>\n      </View>\n    </Modal>\n  }\n\n  return (\n    <View style={styles.container}>\n      {console.log(auth?.currentUser)}\n      <Avatar size={100} rounded source={{ uri: auth?.currentUser?.photoURL }} />\n      <View style={styles.infoContainer}>\n        <Icon style={styles.icon}\n          name='user'\n          type='font-awesome'\n          color='#D50000' /><Text style={styles.text}>{auth?.currentUser?.displaySurname}</Text>\n      </View>\n      <View style={styles.infoContainer}>\n        <Icon style={styles.icon}\n          name='envelope'\n          type='font-awesome'\n          color='#D50000' /><Text style={styles.text}>{auth?.currentUser?.email}</Text>\n      </View>\n      <Button raised title=\"Edit user\" containerStyle={styles.button} onPress={() => setVisible(true)} />\n      <ModalPoup visible={visible}></ModalPoup>\n      <Button raised title=\"Logout\" type=\"outline\" containerStyle={styles.button} onPress={logout} />\n    </View>\n  )\n}\n\nexport default ProfileScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  infoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'baseline',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 18,\n    marginTop: 20\n  },\n  button: {\n    width: 100,\n    marginTop: 20,\n  },\n  modalBg: {\n    flex: 1,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalContainer:{}\n})\n"]},"metadata":{},"sourceType":"module"}