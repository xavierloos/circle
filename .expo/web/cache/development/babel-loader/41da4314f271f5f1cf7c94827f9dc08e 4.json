{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Button, Input, Icon, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\nimport * as Facebook from 'expo-facebook';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (authUser) {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: {\n        backgroundColor: \"#D50000\"\n      },\n      headerTitleStyle: {\n        color: \"white\"\n      },\n      headerTintColor: \"white\"\n    });\n  }, [navigation]);\n\n  var singIn = function singIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      return alert(error);\n    });\n  };\n\n  var loginFacebook = function loginFacebook() {\n    var _await$Facebook$logIn, type, token, response, body, message;\n\n    return _regeneratorRuntime.async(function loginFacebook$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n              appId: '165654778951149'\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: ['public_profile', \"email\"]\n            }));\n\n          case 5:\n            _await$Facebook$logIn = _context.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (!(type === 'success')) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/v2.5/me?fields=email,name,friends&access_token=\" + token));\n\n          case 11:\n            response = _context.sent;\n            body = JSON.stringify(result);\n            console.log(body);\n\n            if (response) {\n              navigation.replace(\"Home\");\n            }\n\n            _context.t0 = console;\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 18:\n            _context.t1 = _context.sent.name;\n            _context.t2 = \"Hi \" + _context.t1;\n            _context.t3 = _context.t2 + \"!\";\n\n            _context.t0.log.call(_context.t0, 'Logged in!', _context.t3);\n\n            console.log(response.json().email);\n\n          case 23:\n            _context.next = 29;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t4 = _context[\"catch\"](0);\n            message = _context.t4.message;\n            console.log(\"Facebook Login Error: \" + message);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 25]], Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.scroll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    h2: true,\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Email\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"at\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 125\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onSubmitEditing: singIn,\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      type: \"font-awesome\",\n      size: 30,\n      color: \"#D50000\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 152\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    raised: true,\n    disabled: !password && !email,\n    title: \"Login\",\n    containerStyle: styles.button,\n    onPress: singIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    raised: true,\n    title: \"Register\",\n    type: \"outline\",\n    containerStyle: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), Platform.OS === 'ios' && React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.textConnect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Connect with: \"), React.createElement(Button, {\n    type: \"clear\",\n    containerStyle: styles.buttonFacebook,\n    onPress: loginFacebook,\n    icon: React.createElement(Icon, {\n      name: \"facebook\",\n      size: 40,\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop: 50\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n    color: \"red\"\n  },\n  textConnect: {\n    marginTop: 20,\n    fontWeight: \"500\",\n    color: \"#D50000\"\n  },\n  buttonFacebook: {\n    marginTop: 10,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/hiMate/screens/LoginScreen.js"],"names":["React","useState","useEffect","useLayoutEffect","Button","Input","Icon","Text","StatusBar","auth","Facebook","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","authUser","replace","setOptions","headerTitle","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","singIn","signInWithEmailAndPassword","catch","error","alert","loginFacebook","initializeAsync","appId","logInWithReadPermissionsAsync","permissions","type","token","fetch","response","body","JSON","stringify","result","console","log","json","name","message","styles","scroll","container","title","inputContainer","text","button","navigate","Platform","OS","textConnect","buttonFacebook","StyleSheet","create","paddingTop","flex","justifyContent","alignItems","padding","marginBottom","fontWeight","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { StyleSheet, View, KeyboardAvoidingView, ScrollView, TouchableOpacity, Platform } from 'react-native';\nimport { Button, Input, Icon, Text } from \"react-native-elements\"\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\"\nimport * as Facebook from 'expo-facebook'\n// import Expo from 'expo'\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) { navigation.replace(\"Home\") }\n    })\n    return unsubscribe\n  }, [])\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"CIRCLE\",\n      headerStyle: { backgroundColor: \"#D50000\" },\n      headerTitleStyle: { color: \"white\" },\n      headerTintColor: \"white\",\n    })\n  }, [navigation])\n\n  const singIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error))\n  }\n\n  const loginFacebook = async () => {\n    try {\n      await Facebook.initializeAsync({ appId: '165654778951149', });\n      const { type, token } = await Facebook.logInWithReadPermissionsAsync({ permissions: ['public_profile', \"email\"] });\n      if (type === 'success') {\n        // Get the user's name using Facebook's Graph API\n        const response = await fetch(`https://graph.facebook.com/v2.5/me?fields=email,name,friends&access_token=${token}`);\n        const body = JSON.stringify(result);\n        console.log(body)\n        if (response) { navigation.replace(\"Home\") }\n        console.log('Logged in!', `Hi ${(await response.json()).name}!`);\n        console.log(response.json().email)\n      }\n    } catch ({ message }) {\n      console.log(`Facebook Login Error: ${message}`);\n    }\n  }\n\n  return (\n    <ScrollView style={styles.scroll}>\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Text h2 style={styles.title}>Login</Text>\n        <View style={styles.inputContainer}>\n          <Input type=\"email\" placeholder=\"Email\" autoFocus value={email} onChangeText={(text) => setEmail(text)} leftIcon={<Icon name=\"at\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n          <Input type=\"password\" placeholder=\"Password\" value={password} onChangeText={(text) => setPassword(text)} onSubmitEditing={singIn} leftIcon={<Icon name=\"lock\" type=\"font-awesome\" size={30} color=\"#D50000\" />} />\n        </View>\n        <Button raised disabled={!password && !email} title=\"Login\" containerStyle={styles.button} onPress={singIn} />\n        <Button raised title=\"Register\" type=\"outline\" containerStyle={styles.button} onPress={() => navigation.navigate(\"Register\")} />\n        {Platform.OS === 'ios' && <>\n          <Text style={styles.textConnect}>Connect with: </Text>\n          <Button type=\"clear\" containerStyle={styles.buttonFacebook} onPress={loginFacebook} icon={\n            <Icon\n              name=\"facebook\"\n              size={40}\n              color=\"red\"\n            />\n          } />\n        </>}\n\n      </KeyboardAvoidingView>\n    </ScrollView>\n  )\n}\nexport default LoginScreen\nconst styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: \"white\",\n    paddingTop: 50\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  title: {\n    marginBottom: 50,\n    fontWeight: \"700\",\n    color: \"#D50000\"\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n    color: \"red\"\n  },\n  textConnect: {\n    marginTop: 20,\n    fontWeight: \"500\",\n    color: \"#D50000\"\n  },\n  buttonFacebook: {\n    marginTop: 10,\n    backgroundColor: \"white\"\n  }\n})"]},"metadata":{},"sourceType":"module"}